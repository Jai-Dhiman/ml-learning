apiVersion: apps/v1
kind: Deployment
metadata:
  name: safety-classifier
  namespace: safety-classifier
  labels:
    app: safety-classifier
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: safety-classifier
  template:
    metadata:
      labels:
        app: safety-classifier
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: safety-classifier
        image: gcr.io/PROJECT_ID/safety-classifier:latest
        ports:
        - containerPort: 7860
          name: http
        - containerPort: 8080
          name: metrics
        env:
        - name: JAX_PLATFORM_NAME
          value: "cpu"
        - name: PYTHONPATH
          value: "/app/src"
        - name: TOKENIZERS_PARALLELISM
          value: "false"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        readinessProbe:
          httpGet:
            path: /
            port: 7860
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 7860
          initialDelaySeconds: 60
          periodSeconds: 30
        volumeMounts:
        - name: model-storage
          mountPath: /app/checkpoints
        - name: config
          mountPath: /app/configs
          readOnly: true
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc
      - name: config
        configMap:
          name: safety-classifier-config

---
apiVersion: v1
kind: Service
metadata:
  name: safety-classifier-service
  namespace: safety-classifier
  labels:
    app: safety-classifier
spec:
  selector:
    app: safety-classifier
  ports:
  - name: http
    port: 80
    targetPort: 7860
    protocol: TCP
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-storage-pvc
  namespace: safety-classifier
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: safety-classifier-config
  namespace: safety-classifier
data:
  base_config.yaml: |
    # Model Architecture
    model:
      name: "safety_transformer"
      vocab_size: 32000
      embedding_dim: 768
      num_layers: 6
      num_heads: 12
      feedforward_dim: 3072
      max_sequence_length: 512
      dropout_rate: 0.1
      num_classes: 4

    # Training Configuration
    training:
      batch_size: 32
      learning_rate: 2e-5
      warmup_steps: 1000
      max_steps: 50000
      eval_every: 1000
      save_every: 5000
      gradient_clip_norm: 1.0
      
      optimizer: "adamw"
      weight_decay: 0.01
      beta1: 0.9
      beta2: 0.999
      
      schedule: "cosine_with_warmup"
      min_lr_ratio: 0.1

    # Data Configuration
    data:
      max_length: 512
      tokenizer: "sentence-transformers/all-MiniLM-L6-v2"
      train_split: 0.8
      val_split: 0.1
      test_split: 0.1
      text_augmentation: true
      augmentation_prob: 0.1

    # Paths
    paths:
      data_dir: "data"
      model_dir: "models"
      checkpoint_dir: "checkpoints"
      log_dir: "logs"
      cache_dir: ".cache"